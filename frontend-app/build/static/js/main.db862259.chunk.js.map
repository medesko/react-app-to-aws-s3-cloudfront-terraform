{"version":3,"sources":["theme/theme.ts","components/atoms/button/PrimaryButton.tsx","hooks/useMessage.ts","providers/LoginUserProvider.tsx","hooks/useLoginUser.ts","components/pages/Login.tsx","hooks/useAuth.ts","components/pages/Home.tsx","components/pages/Page404.tsx","components/pages/Setting.tsx","components/organisms/user/UserCard.tsx","components/organisms/user/UserDetailModal.tsx","components/pages/UserManagement.tsx","hooks/useAllUsers.ts","hooks/useSelectUser.ts","router/HomeRoutes.tsx","components/atoms/button/MenuIconButton.tsx","components/molecules/MenuDrawer.tsx","components/organisms/layout/Header.tsx","components/templates/HeaderLayout.tsx","router/Router.tsx","App.tsx","index.tsx"],"names":["theme","extendTheme","styles","global","body","backgroundColor","color","PrimaryButton","memo","props","children","disabled","loading","onClick","bg","_hover","opacity","isLoading","useMessage","toast","useToast","showMessage","useCallback","title","status","position","duration","isClosable","LoginUserContext","createContext","LoginUserProvider","useState","loginUser","setLoginUser","Provider","value","useLoginUser","useContext","Login","history","useHistory","setLoading","login","id","axios","get","then","res","data","isAdmin","push","catch","useAuth","userId","setUserId","align","justify","height","ws","p","borderRadius","shadow","as","size","textAlign","my","spacing","py","px","placeholder","onChange","e","target","Home","Page404","Setting","UserCard","imageUrl","userName","fullName","w","h","cursor","boxSize","src","alt","m","fontSize","fontWeight","UserDetailModal","user","isOpen","onClose","username","setUsername","setName","email","setEmail","phone","setPhone","useEffect","name","autoFocus","motionPreset","pb","mx","isReadOnly","alert","UserManagement","useDisclosure","onOpen","users","setUsers","getUsers","finally","useAllUsers","selectedUser","setSelectedUser","onSelectUser","targetUser","find","useSelectUser","onClickUser","base","md","map","homeRoutes","path","exact","MenuIconButton","icon","Hamburger","variant","display","MenuDrawer","onClickHome","onClickUserManagement","onClickSetting","placement","Header","padding","mr","flexGrow","pr","HeaderLayout","Router","render","url","match","route","App","className","rootElement","document","getElementById"],"mappings":"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","file":"static/js/main.db862259.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        backgroundColor: \"gray.100\",\n        color: \"gray.800\"\n      }\n    }\n  }\n});\nexport default theme;\n","import { memo, ReactNode, VFC } from \"react\";\nimport { Button } from \"@chakra-ui/react\";\n\ntype Props = {\n  children: ReactNode;\n  disabled?: boolean;\n  loading?: boolean;\n  onClick: () => void;\n};\n\nexport const PrimaryButton: VFC<Props> = memo((props) => {\n  const { children, disabled = false, loading = false, onClick } = props;\n  return (\n    <Button\n      bg=\"pink.200\"\n      color=\"white\"\n      _hover={{ opacity: 0.8 }}\n      disabled={disabled || loading}\n      isLoading={loading}\n      onClick={onClick}\n    >\n      {children}\n    </Button>\n  );\n});\n","import { useCallback } from \"react\";\nimport { useToast } from \"@chakra-ui/react\";\n\ntype Props = {\n  title: string;\n  status: \"info\" | \"warning\" | \"success\" | \"error\";\n};\n\nexport const useMessage = () => {\n  const toast = useToast();\n\n  const showMessage = useCallback(\n    (props: Props) => {\n      const { title, status } = props;\n      toast({\n        title,\n        status,\n        position: \"top\",\n        duration: 2000,\n        isClosable: true\n      });\n    },\n    [toast]\n  );\n  return { showMessage };\n};\n","import {\n  createContext,\n  Dispatch,\n  ReactNode,\n  SetStateAction,\n  useState\n} from \"react\";\n\nimport { User } from \"../types/api/user\";\n\ntype LoginUser = User & { isAdmin: boolean };\n\nexport type LoginUserContextType = {\n  loginUser: LoginUser | null;\n  setLoginUser: Dispatch<SetStateAction<LoginUser | null>>;\n};\n\nexport const LoginUserContext = createContext<LoginUserContextType>(\n  {} as LoginUserContextType\n);\n\nexport const LoginUserProvider = (props: { children: ReactNode }) => {\n  const { children } = props;\n  const [loginUser, setLoginUser] = useState<LoginUser | null>(null);\n\n  return (\n    <LoginUserContext.Provider value={{ loginUser, setLoginUser }}>\n      {children}\n    </LoginUserContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\n\nimport {\n  LoginUserContext,\n  LoginUserContextType\n} from \"../providers/LoginUserProvider\";\n\nexport const useLoginUser = (): LoginUserContextType =>\n  useContext(LoginUserContext);\n","import { ChangeEvent, memo, useState, VFC } from \"react\";\nimport { Box, Divider, Flex, Heading, Input, Stack } from \"@chakra-ui/react\";\n\nimport { PrimaryButton } from \"../atoms/button/PrimaryButton\";\nimport { useAuth } from \"../../hooks/useAuth\";\n\nexport const Login: VFC = memo(() => {\n  const { login, loading } = useAuth();\n\n  const [userId, setUserId] = useState(\"\");\n\n  const onChangeUserId = (e: ChangeEvent<HTMLInputElement>) =>\n    setUserId(e.target.value);\n\n  const onClickLogin = () => login(userId);\n\n  return (\n    <Flex align=\"center\" justify=\"center\" height=\"100vh\">\n      <Box bg=\"white\" ws=\"sm\" p={4} borderRadius=\"md\" shadow=\"md\">\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"center\">\n          User Management App\n        </Heading>\n        <Divider my={4} />\n        <Stack spacing={6} py={4} px={10}>\n          <Input\n            placeholder=\"User ID\"\n            value={userId}\n            onChange={onChangeUserId}\n          />\n          <PrimaryButton\n            disabled={userId === \"\"}\n            loading={loading}\n            onClick={onClickLogin}\n          >\n            Login\n          </PrimaryButton>\n        </Stack>\n      </Box>\n    </Flex>\n  );\n});\n","import { useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { User } from \"../types/api/user\";\nimport { useMessage } from \"./useMessage\";\nimport { useLoginUser } from \"../hooks/useLoginUser\";\n\nexport const useAuth = () => {\n  const history = useHistory();\n  const { showMessage } = useMessage();\n  const { setLoginUser } = useLoginUser();\n\n  const [loading, setLoading] = useState(false);\n\n  const login = useCallback(\n    (id: string) => {\n      setLoading(true);\n\n      axios\n        .get<User>(`https://jsonplaceholder.typicode.com/users/${id}`)\n        .then((res) => {\n          if (res.data) {\n            const isAdmin = res.data.id === 10 ? true : false;\n            setLoginUser({ ...res.data, isAdmin });\n            showMessage({ title: \"Login\", status: \"success\" });\n            history.push(\"/home\");\n          } else {\n            showMessage({ title: \"Not found\", status: \"error\" });\n            setLoading(false);\n          }\n        })\n        .catch(() => {\n          showMessage({ title: \"Unable to login\", status: \"error\" });\n          setLoading(false);\n        });\n    },\n    [history, showMessage, setLoginUser]\n  );\n  return { login, loading };\n};\n","import { memo, VFC } from \"react\";\n\nexport const Home: VFC = memo(() => {\n  return <p>Home</p>;\n});\n","import { memo, VFC } from \"react\";\n\nexport const Page404: VFC = memo(() => {\n  return <p>404</p>;\n});\n","import { memo, VFC } from \"react\";\n\nexport const Setting: VFC = memo(() => {\n  return <p>Setting</p>;\n});\n","import { memo, VFC } from \"react\";\nimport { Box, Image, Stack, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n  id: number;\n  imageUrl: string;\n  userName: string;\n  fullName: string;\n  onClick: (id: number) => void;\n};\n\nexport const UserCard: VFC<Props> = memo((props) => {\n  const { id, imageUrl, userName, fullName, onClick } = props;\n  return (\n    <Box\n      w=\"260px\"\n      h=\"260px\"\n      bg=\"white\"\n      borderRadius=\"10px\"\n      shadow=\"md\"\n      p={4}\n      _hover={{ cursor: \"Pointer\", opacity: 0.8 }}\n      onClick={() => onClick(id)}\n    >\n      <Stack textAlign=\"center\">\n        <Image\n          borderRadius=\"full\"\n          boxSize=\"160px\"\n          src={imageUrl}\n          alt={userName}\n          m=\"auto\"\n        />\n        <Text fontSize=\"lg\" fontWeight=\"bold\">\n          {userName}\n        </Text>\n        <Text fontSize=\"sm\" color=\"gray\">\n          {fullName}\n        </Text>\n      </Stack>\n    </Box>\n  );\n});\n","import { ChangeEvent, memo, useEffect, useState, VFC } from \"react\";\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Stack\n} from \"@chakra-ui/react\";\n\nimport { User } from \"../../../types/api/user\";\nimport { PrimaryButton } from \"../../atoms/button/PrimaryButton\";\n\ntype Props = {\n  user: User | null;\n  isOpen: boolean;\n  isAdmin?: boolean;\n  onClose: () => void;\n};\n\nexport const UserDetailModal: VFC<Props> = memo((props) => {\n  const { user, isOpen, isAdmin = false, onClose } = props;\n\n  const [username, setUsername] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  useEffect(() => {\n    setUsername(user?.username ?? \"\");\n    setName(user?.name ?? \"\");\n    setEmail(user?.email ?? \"\");\n    setPhone(user?.phone ?? \"\");\n  }, [user]);\n\n  const onChangeUserName = (e: ChangeEvent<HTMLInputElement>) =>\n    setUsername(e.target.value);\n  const onChangeName = (e: ChangeEvent<HTMLInputElement>) =>\n    setName(e.target.value);\n  const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) =>\n    setEmail(e.target.value);\n  const onChangePhone = (e: ChangeEvent<HTMLInputElement>) =>\n    setPhone(e.target.value);\n\n  const onClickUpdate = () => alert();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      autoFocus={false}\n      motionPreset=\"slideInBottom\"\n    >\n      <ModalOverlay />\n      <ModalContent pb={2}>\n        <ModalHeader>User details</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody mx={4}>\n          <Stack spacing={4}>\n            <FormControl>\n              <FormLabel>Name</FormLabel>\n              <Input\n                value={username}\n                onChange={onChangeUserName}\n                isReadOnly={!isAdmin}\n              />\n            </FormControl>\n            <FormControl>\n              <FormLabel>Full Name</FormLabel>\n              <Input\n                value={username}\n                onChange={onChangeName}\n                isReadOnly={!isAdmin}\n              />\n            </FormControl>\n            <FormControl>\n              <FormLabel>Mail</FormLabel>\n              <Input\n                value={email}\n                onChange={onChangeEmail}\n                isReadOnly={!isAdmin}\n              />\n            </FormControl>\n            <FormControl>\n              <FormLabel>Phone</FormLabel>\n              <Input\n                value={phone}\n                onChange={onChangePhone}\n                isReadOnly={!isAdmin}\n              />\n            </FormControl>\n          </Stack>\n        </ModalBody>\n        {isAdmin && (\n          <ModalFooter>\n            <PrimaryButton onClick={onClickUpdate}>Up date</PrimaryButton>\n          </ModalFooter>\n        )}\n      </ModalContent>\n    </Modal>\n  );\n});\n","import { memo, useCallback, useEffect, VFC } from \"react\";\nimport {\n  Center,\n  Spinner,\n  useDisclosure,\n  Wrap,\n  WrapItem\n} from \"@chakra-ui/react\";\n\nimport { UserCard } from \"../organisms/user/UserCard\";\nimport { UserDetailModal } from \"../organisms/user/UserDetailModal\";\nimport { useAllUsers } from \"../../hooks/useAllUsers\";\nimport { useSelectUser } from \"../../hooks/useSelectUser\";\nimport { useLoginUser } from \"../../hooks/useLoginUser\";\n\nexport const UserManagement: VFC = memo(() => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { getUsers, users, loading } = useAllUsers();\n  const { onSelectUser, selectedUser } = useSelectUser();\n  const { loginUser } = useLoginUser();\n\n  useEffect(() => getUsers(), []);\n\n  const onClickUser = useCallback(\n    (id: number) => {\n      onSelectUser({ id, users, onOpen });\n    },\n    [users, onSelectUser, onOpen]\n  );\n\n  return (\n    <>\n      {loading ? (\n        <Center h=\"100vh\">\n          <Spinner />\n        </Center>\n      ) : (\n        <Wrap p={{ base: 4, md: 10 }}>\n          {users.map((user) => (\n            <WrapItem key={user.id} mx=\"auto\">\n              <UserCard\n                id={user.id}\n                imageUrl=\"https://source.unsplash.com/random\"\n                userName={user.username}\n                fullName={user.name}\n                onClick={onClickUser}\n              />\n            </WrapItem>\n          ))}\n        </Wrap>\n      )}\n      <UserDetailModal\n        user={selectedUser}\n        isOpen={isOpen}\n        isAdmin={loginUser?.isAdmin}\n        onClose={onClose}\n      />\n    </>\n  );\n});\n","import { useCallback, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { User } from \"../types/api/user\";\nimport { useMessage } from \"./useMessage\";\n\nexport const useAllUsers = () => {\n  const { showMessage } = useMessage();\n\n  const [loading, setLoading] = useState(false);\n  const [users, setUsers] = useState<Array<User>>([]);\n\n  const getUsers = useCallback(() => {\n    setLoading(true);\n    axios\n      .get<Array<User>>(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => {\n        setUsers(res.data);\n      })\n      .catch(() => {\n        showMessage({ title: \"Failed to get user\", status: \"error\" });\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return { getUsers, loading, users };\n};\n","import { useCallback, useState } from \"react\";\n\nimport { User } from \"..//types/api/user\";\n\ntype Props = {\n  id: number;\n  users: Array<User>;\n  onOpen: () => void;\n};\n\nexport const useSelectUser = () => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const onSelectUser = useCallback((props: Props) => {\n    const { id, users, onOpen } = props;\n    const targetUser = users.find((user) => user.id === id) || null;\n\n    setSelectedUser(targetUser);\n    onOpen();\n  }, []);\n  return { onSelectUser, selectedUser };\n};\n","import { Home } from \"../components/pages/Home\";\nimport { Page404 } from \"../components/pages/Page404\";\nimport { Setting } from \"../components/pages/Setting\";\nimport { UserManagement } from \"../components/pages/UserManagement\";\n\nexport const homeRoutes = [\n  {\n    path: \"/\",\n    exact: true,\n    children: <Home />\n  },\n  {\n    path: \"/user_management\",\n    exact: false,\n    children: <UserManagement />\n  },\n  {\n    path: \"/setting\",\n    exact: false,\n    children: <Setting />\n  },\n  {\n    path: \"*\",\n    exact: false,\n    children: <Page404 />\n  }\n];\n","import { memo, VFC } from \"react\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nimport { IconButton } from \"@chakra-ui/react\";\n\ntype Props = {\n  onOpen: () => void;\n};\n\nexport const MenuIconButton: VFC<Props> = memo((props) => {\n  const { onOpen } = props;\n  return (\n    <IconButton\n      aria-label=\"menubutton\"\n      icon={<HamburgerIcon />}\n      size=\"sm\"\n      variant=\"unstyled\"\n      display={{ base: \"block\", md: \"none\" }}\n      onClick={onOpen}\n    />\n  );\n});\n","import { memo, VFC } from \"react\";\nimport {\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerOverlay\n} from \"@chakra-ui/react\";\n\ntype Props = {\n  onClose: () => void;\n  isOpen: boolean;\n  onClickHome: () => void;\n  onClickUserManagement: () => void;\n  onClickSetting: () => void;\n};\n\nexport const MenuDrawer: VFC<Props> = memo((props) => {\n  const {\n    onClose,\n    isOpen,\n    onClickHome,\n    onClickUserManagement,\n    onClickSetting\n  } = props;\n  return (\n    <Drawer placement=\"left\" size=\"xs\" onClose={onClose} isOpen={isOpen}>\n      <DrawerOverlay>\n        <DrawerContent>\n          <DrawerBody p={0} bg=\"gray.100\">\n            <Button w=\"100%\" onClick={onClickHome}>\n              Top\n            </Button>\n            <Button w=\"100%\" onClick={onClickUserManagement}>\n              Users\n            </Button>\n            <Button w=\"100%\" onClick={onClickSetting}>\n              Config\n            </Button>\n          </DrawerBody>\n        </DrawerContent>\n      </DrawerOverlay>\n    </Drawer>\n  );\n});\n","import { memo, useCallback, VFC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Flex, Heading, Link, useDisclosure } from \"@chakra-ui/react\";\n\nimport { MenuIconButton } from \"../../atoms/button/MenuIconButton\";\nimport { MenuDrawer } from \"../../molecules/MenuDrawer\";\n\nexport const Header: VFC = memo(() => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n\n  const onClickHome = useCallback(() => history.push(\"/home\"), []);\n  const onClickUserManagement = useCallback(\n    () => history.push(\"/home/user_management\"),\n    []\n  );\n  const onClickSetting = useCallback(() => history.push(\"/home/setting\"), []);\n\n  return (\n    <>\n      <Flex\n        as=\"nav\"\n        bg=\"teal.500\"\n        color=\"gray.50\"\n        align=\"center\"\n        justify=\"space-between\"\n        padding={{ base: 3, md: 5 }}\n      >\n        <Flex\n          align=\"center\"\n          as=\"a\"\n          mr={8}\n          _hover={{ cursor: \"pointer\" }}\n          onClick={onClickHome}\n        >\n          <Heading as=\"h1\" fontSize={{ base: \"md\", md: \"lg\" }}>\n            User Management App\n          </Heading>\n        </Flex>\n        <Flex\n          align=\"center\"\n          fontSize=\"sm\"\n          flexGrow={2}\n          display={{ base: \"none\", md: \"flex\" }}\n        >\n          <Box pr=\"4\">\n            <Link onClick={onClickUserManagement}>Users</Link>\n          </Box>\n          <Link onClick={onClickSetting}>Config</Link>\n        </Flex>\n        <MenuIconButton onOpen={onOpen} />\n      </Flex>\n      <MenuDrawer\n        onClose={onClose}\n        isOpen={isOpen}\n        onClickHome={onClickHome}\n        onClickUserManagement={onClickUserManagement}\n        onClickSetting={onClickSetting}\n      />\n    </>\n  );\n});\n","import { memo, ReactNode, VFC } from \"react\";\n\nimport { Header } from \"../organisms/layout/Header\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const HeaderLayout: VFC<Props> = memo((props) => {\n  const { children } = props;\n  return (\n    <>\n      <Header />\n      {children}\n    </>\n  );\n});\n","import { memo, VFC } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { Login } from \"../components/pages/Login\";\nimport { homeRoutes } from \"./HomeRoutes\";\nimport { Page404 } from \"../components/pages/Page404\";\nimport { HeaderLayout } from \"../components/templates/HeaderLayout\";\nimport { LoginUserProvider } from \"../providers/LoginUserProvider\";\n\nexport const Router: VFC = memo(() => {\n  return (\n    <Switch>\n      <LoginUserProvider>\n        <Route exact path=\"/\">\n          <Login />\n        </Route>\n        <Route\n          path=\"/home\"\n          render={({ match: { url } }) => (\n            <Switch>\n              {homeRoutes.map((route) => (\n                <Route\n                  key={route.path}\n                  exact={route.exact}\n                  path={`${url}${route.path}`}\n                >\n                  <HeaderLayout>{route.children}</HeaderLayout>\n                </Route>\n              ))}\n            </Switch>\n          )}\n        />\n      </LoginUserProvider>\n      <Route path=\"*\">\n        <Page404 />\n      </Route>\n    </Switch>\n  );\n});\n","import { ChakraProvider } from \"@chakra-ui/react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport theme from \"./theme/theme\";\nimport { Router } from \"./router/Router\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <ChakraProvider theme={theme}>\n        <BrowserRouter>\n          <Router />\n        </BrowserRouter>\n      </ChakraProvider>\n    </div>\n  );\n}\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}